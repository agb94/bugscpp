#!/bin/bash
# Usage example: ./get_coverage yara 1 3

TargetDir=$(pwd)/targets/
CoverageDir=$(pwd)/coverage/

[ ! -d $TargetDir ] && mkdir $TargetDir
[ ! -d $CoverageDir ] && mkdir $CoverageDir

# parameters 
project=$1
start=$2
end=$3

if [ "$(docker ps -all | grep $project | wc -l)" -ne "0" ]; then
    docker stop "${project}-dpp"
fi

if [ "$(docker image ls | grep $project | wc -l)" -ne "0" ]; then
    docker image rm "hschoe/defects4cpp-ubuntu:${project}"
fi

for version in $(seq $start $end); do
    # set variables

    FTD=${TargetDir}/${project}/buggy-${version}
    OD=$CoverageDir/${project}_${version}_buggy


    if [ -d $OD ]; then
        echo $OD exists
        continue
    fi

    echo $FTD
    [ -d $FTD ] && rm -rf $FTD;
    echo "Outputs will be saved to" $OD

    # checkout
    echo $project $version
    python bugscpp/bugscpp.py checkout "$project" $version --buggy --target $TargetDir > $TargetDir/$project.$version.checkout.stdout

    python bugscpp/bugscpp.py build $FTD --coverage --verbose > $TargetDir/$project.$version.build.stdout

    mkdir $OD
    # run tests & measure coverage
    python bugscpp/bugscpp.py test $FTD --coverage --additional-gcov-options="-b" --jobs=16 --output-dir $OD
done
